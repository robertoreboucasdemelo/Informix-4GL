#-----------------------------------------------------------------------------#
# Porto Seguro Cia Seguros Gerais                                             #
#.............................................................................#
# Sistema........: Regras Siebel                                              #
# Modulo.........: ctc69m16                                                   #
# Objetivo.......: Cadastro Servico                                           #
# Analista Resp. : Amilton Pinto                                              #
# PSI            :                                                            #
#.............................................................................#
# Desenvolvimento: R.Fornax                                                   #
# Liberacao      : 25/08/2013                                                 #
#.............................................................................#

globals  "/homedsa/projetos/geral/globals/glct.4gl"

define ma_ctc69m16 array[500] of record
      srvcod      like datksrv.srvcod   
    , srvnom      like datksrv.srvnom   
    , srvsitflg   like datksrv.srvsitflg
end record
 
define mr_ctc69m16 record
      empcod      like datksrv.empcod    
     ,usrmatnum   like datksrv.usrmatnum  
     ,regatldat   like datksrv.regatldat 
     ,funnom      like isskfunc.funnom 
     ,usrtipcod   like datksrv.usrtipcod
     ,srvdestxt   like datksrv.srvdestxt
end record            

define m_operacao  char(1)
define arr_aux     smallint
define scr_aux     smallint

define  m_prepare  smallint

#===============================================================================
 function ctc69m16_prepare()
#===============================================================================

define l_sql char(10000)

 let l_sql = ' select srvcod                '
          ,  '      , srvnom                '
          ,  '      , srvsitflg             '
          ,  '   from datksrv               '    
          ,  '  order by srvsitflg, srvnom  '
 prepare p_ctc69m16_001 from l_sql
 declare c_ctc69m16_001 cursor for p_ctc69m16_001
 
 let l_sql =  ' update datksrv            '
           ,  '     set srvnom    = ?  ,  '
           ,  '         srvsitflg = ?  ,  '
           ,  '         usrtipcod = ?  ,  '
           ,  '         empcod    = ?  ,  '
           ,  '         usrmatnum = ?  ,  '
           ,  '         regatldat = ?     '
           ,  '   where srvcod    = ?     '        
 prepare p_ctc69m16_002 from l_sql
  
 let l_sql = ' select max(srvcod)  '           
           , '   from datksrv      '
           , '  where srvnom  = ?  '  
           , '  and srvsitflg = ?  '       
 prepare p_ctc69m16_003 from l_sql                  
 declare c_ctc69m16_003 cursor for p_ctc69m16_003  
 

 let l_sql = '   select count(*)        '    
           , '     from datksrv         '
           , '    where srvnom = ?      '
           , '    and srvsitflg = "A"   '
 prepare p_ctc69m16_004 from l_sql
 declare c_ctc69m16_004 cursor for p_ctc69m16_004
 	
 	
 let l_sql = '   select empcod       '                                  	
            ,'         ,usrmatnum    '                                  	
            ,'         ,regatldat    '                                  	
            ,'         ,usrtipcod    '  
            ,'         ,srvdestxt    '                                	
            ,'     from datksrv      '     
            ,'    where srvcod  =  ? '  
 prepare p_ctc69m16_005    from l_sql                                             	
 declare c_ctc69m16_005 cursor for p_ctc69m16_005                                 	
    
  
 let l_sql =  ' insert into datksrv     '
           ,  '   (srvnom               '
           ,  '   ,srvdestxt            '
           ,  '   ,srvsitflg            '   
           ,  '   ,usrtipcod            '
           ,  '   ,empcod               '
           ,  '   ,usrmatnum            '
           ,  '   ,regatldat)           '
           ,  ' values(?,?,?,?,?,?,?)   '
 prepare p_ctc69m16_006 from l_sql
 
 
 let l_sql = ' update datksrv       '   
           , '   set srvdestxt =  ? '            
           , '   where srvcod  =  ? '  
 prepare p_ctc69m16_007 from l_sql            
 
 
 let l_sql =  '    select funnom          '
             ,'      from isskfunc        '
             ,'     where empcod = ?      '
             ,'       and funmat = ?      '
             ,'       and usrtip = ?      '
 prepare p_ctc69m16_008 from l_sql
 declare c_ctc69m16_008 cursor for p_ctc69m16_008
 	
 let l_sql = ' select count(*)     '       	
           , ' from datksrvgrp     '   	
           , ' where srvcod = ?    '        	     	 	
 prepare p_ctc69m16_009 from l_sql               	
 declare c_ctc69m16_009 cursor for p_ctc69m16_009		
 	
 
 let l_sql = ' select count(*)                  '       	         	
           , '  from datksrvgrp a,              '           	
           , '       datksrvgrpesp b            '  	       	
           , ' where a.srvgrpcod = b.srvgrpcod  ' 	
           , '   and a.srvcod = ?               '       	 	     	
 prepare p_ctc69m16_010 from l_sql               	         	
 declare c_ctc69m16_010 cursor for p_ctc69m16_010
 	
 
 let l_sql = ' update datksrvgrp    '     	
           , ' set regsitflg = "I"  '   	   	
           , ' where srvcod  = ?    '        	
 prepare p_ctc69m16_011 from l_sql               	
                                                 	
 let l_sql = ' update datksrvgrpesp  '    	
           , '  set regsitflg = "I"  '        	
           , '  where srvgrpcod in   '      	
           , ' (select srvgrpcod     '   	   	
           , '  from datksrvgrp      '    	          	
           , '  where srvcod = ? )   '     	
 prepare p_ctc69m16_012 from l_sql               	
 	
 

 let m_prepare = true


end function

#===============================================================================
 function ctc69m16()
#===============================================================================
 
define lr_retorno record
    flag          smallint               ,
    cont          integer                ,
    srvnom        like datksrv.srvnom    ,  
    srvsitflg     like datksrv.srvsitflg ,
    confirma      char(01)               ,
    srvdestxt     like datksrv.srvdestxt ,
    prim          smallint             
end record
 
 
 initialize mr_ctc69m16.*, lr_retorno.* to null 

 let arr_aux = 1
 
 if m_prepare is null or
    m_prepare <> true then
    call ctc69m16_prepare()
 end if
    
 
 
 open window w_ctc69m16 at 6,2 with form 'ctc69m16'
 attribute(form line 1)
  
 message ' (F17)Abandona, (F1)Inclui, (F8)Descricao'
   

  #--------------------------------------------------------
  # Seleciona os Dados do Servico
  #--------------------------------------------------------
  
  open c_ctc69m16_001  
  foreach c_ctc69m16_001 into ma_ctc69m16[arr_aux].srvcod
                            , ma_ctc69m16[arr_aux].srvnom
                            , ma_ctc69m16[arr_aux].srvsitflg

       let arr_aux = arr_aux + 1
       
       if arr_aux > 500 then
          error " Limite Excedido! Foram Encontrados Mais de 500 Servicos!"
          exit foreach
       end if
       
  end foreach 
  
  
  if arr_aux = 1  then
       error "Nao Foi Encontrado Nenhum Registro"
  end if
 
 let m_operacao = " " 
  
 call set_count(arr_aux - 1 ) 

 input array ma_ctc69m16 without defaults from s_ctc69m16.*
 	
      
      
      #---------------------------------------------
       before row
      #---------------------------------------------
          let arr_aux = arr_curr()
          let scr_aux = scr_line()
          
          let lr_retorno.prim = true 
          
          if fgl_lastkey() = fgl_keyval ("down")     or
             fgl_lastkey() = fgl_keyval ("return")   then
             
             if ma_ctc69m16[arr_aux].srvcod is null then
               let m_operacao = 'i'           
             end if
          
          end if
          
      #---------------------------------------------
       before insert
      #---------------------------------------------
         let m_operacao = 'i'
         
         initialize  ma_ctc69m16[arr_aux] to null
                  
         display ma_ctc69m16[arr_aux].srvnom  to s_ctc69m16[scr_aux].srvnom                 
         display ma_ctc69m16[arr_aux].srvsitflg to s_ctc69m16[scr_aux].srvsitflg              

              
      #---------------------------------------------
       before field srvnom
      #---------------------------------------------
        display ma_ctc69m16[arr_aux].srvnom to s_ctc69m16[scr_aux].srvnom attribute(reverse)
        let lr_retorno.srvnom = ma_ctc69m16[arr_aux].srvnom 
 
        if m_operacao <> 'i' then
           next field srvsitflg
        end if 
      
      #---------------------------------------------
       after field srvnom                   
      #---------------------------------------------
         
        if m_operacao = 'i' then
        	             
        	if ma_ctc69m16[arr_aux].srvnom is null then
        		 error "Por Favor Informe o Nome do Servico!"
        		 next field srvnom
          end if
          
          #--------------------------------------------------------
          # Valida Se o Nome do Servico Ja Esta Cadastrado                         
          #--------------------------------------------------------
          
          if not ctc69m16_valida_nome(ma_ctc69m16[arr_aux].srvnom) then
             next field srvnom                                         
          end if                                                            
                   
        end if 
        
        
        if lr_retorno.prim then
          if ma_ctc69m16[arr_aux].srvnom <> lr_retorno.srvnom then  
             let ma_ctc69m16[arr_aux].srvnom = lr_retorno.srvnom
          end if
        end if
        
         
      #---------------------------------------------
       before field srvsitflg
      #---------------------------------------------
         
         
         let lr_retorno.srvsitflg = ma_ctc69m16[arr_aux].srvsitflg
         
         if ma_ctc69m16[arr_aux].srvcod is null then                                                
            display ma_ctc69m16[arr_aux].srvsitflg to s_ctc69m16[scr_aux].srvsitflg attribute(reverse)     
            let m_operacao = 'i'                                                                     
         else                                                                                                                              
           display ma_ctc69m16[arr_aux].* to s_ctc69m16[scr_aux].* attribute(reverse)                
         end if
         
         if m_operacao <> 'i' then                                                                                                                             
           
            let lr_retorno.srvdestxt = null
            
            #--------------------------------------------------------
            # Seleciona os Dados de Atualizacao do Servico                          
            #--------------------------------------------------------
            
            call ctc69m16_dados_alteracao(ma_ctc69m16[arr_aux].srvcod) 
            
            let lr_retorno.srvdestxt = mr_ctc69m16.srvdestxt 
         
         end if                                                          
     
      #---------------------------------------------
       after field srvsitflg
      #---------------------------------------------
         
          if m_operacao = 'i' then         
              if fgl_lastkey() = fgl_keyval ("up")     or           
                 fgl_lastkey() = fgl_keyval ("left")   then 
                    next field srvnom          
              end if                
          end if                              
        
       
         if  ma_ctc69m16[arr_aux].srvsitflg is null or 
         	  (ma_ctc69m16[arr_aux].srvsitflg <> "A"  and       
         	   ma_ctc69m16[arr_aux].srvsitflg <> "I") then      
         	     error "Por Favor Digite 'A' ou 'I' " 	
               next field srvsitflg                
         end if                                       
         
         
         
         if m_operacao <> 'i' then 
           
                   
            if ma_ctc69m16[arr_aux].srvsitflg <> lr_retorno.srvsitflg then 
            	
            	  if ma_ctc69m16[arr_aux].srvsitflg = 'A' then                       
            	     
            	     #--------------------------------------------------------
            	     # Valida o Nome do Servico                          
            	     #--------------------------------------------------------
            	     
            	     if not ctc69m16_valida_nome(ma_ctc69m16[arr_aux].srvnom) then 
            	        let ma_ctc69m16[arr_aux].srvsitflg = lr_retorno.srvsitflg
            	        next field srvsitflg                                         
            	     end if
            	  else
            	  	 
            	  	 #--------------------------------------------------------
            	  	 # Inativa o Servico                          
            	  	 #--------------------------------------------------------
            	  	 
            	  	 if not ctc69m16_inativacao(ma_ctc69m16[arr_aux].srvcod) then  
            	  	 	   next field srvsitflg                               
            	  	 end if                                                                                                                
            	  end if 
            	  
            	  #--------------------------------------------------------           	                                                                                           
                # Atualiza os Dados do Servico                          
                #--------------------------------------------------------
                
                whenever error continue 
                execute p_ctc69m16_002 using ma_ctc69m16[arr_aux].srvnom
                                           , ma_ctc69m16[arr_aux].srvsitflg
                                           , g_issk.usrtip         
                                           , g_issk.empcod 
                                           , g_issk.funmat         
                                           , 'today'                                                  
                                           , ma_ctc69m16[arr_aux].srvcod 
                whenever error continue 
                
                if sqlca.sqlcode <> 0 then
                    error 'ERRO(',sqlca.sqlcode,') na Alteracao do Servico!'       
                else
                	  error 'Dados Alterados com Sucesso!' 
                end if 
              end if
                       
              let m_operacao = ' ' 
                                     
         else
           
                    
           let lr_retorno.confirma = cts08g01("C","S","",      
                                              "DESEJA INCLUIR",
                                              "O SERVICO?",  
                                              "")              
                                                               
           if lr_retorno.confirma = "N" then                   
           	  let  lr_retorno.prim = false
           	  next field srvnom      
           end if	                    
           
           #--------------------------------------------------------          
           # Inclui os Dados do Servico                          
           #--------------------------------------------------------
            
           whenever error continue
           execute p_ctc69m16_006 using ma_ctc69m16[arr_aux].srvnom 
                                      , mr_ctc69m16.srvdestxt 
                                      , ma_ctc69m16[arr_aux].srvsitflg
                                      , g_issk.usrtip
                                      , g_issk.empcod
                                      , g_issk.funmat
                                      , 'today'
                                      
           whenever error continue
          
           if sqlca.sqlcode = 0 then
              error 'Dados Incluidos com Sucesso!'
              
              let m_operacao = ' '   
              
              #--------------------------------------------------------
              # Recupera a Chave Serial do Servico                          
              #--------------------------------------------------------
                            
              open c_ctc69m16_003 using ma_ctc69m16[arr_aux].srvnom ,  
                                        ma_ctc69m16[arr_aux].srvsitflg
              whenever error continue                                                
              fetch c_ctc69m16_003 into ma_ctc69m16[arr_aux].srvcod                     
              whenever error stop                                                    
                                                                                     
              if sqlca.sqlcode <>  0   then                                          
                 error " Erro (",sqlca.sqlcode,") ao Recuperar o Codigo do Servico!"   
              end if                                                                 
                                                                                     
           else
              error 'ERRO(',sqlca.sqlcode,') na Insercao do Servico!'
           end if
           
           next field srvsitflg 
           
         end if
         
           
         display ma_ctc69m16[arr_aux].srvcod     to s_ctc69m16[scr_aux].srvcod
         display ma_ctc69m16[arr_aux].srvnom     to s_ctc69m16[scr_aux].srvnom  
         display ma_ctc69m16[arr_aux].srvsitflg  to s_ctc69m16[scr_aux].srvsitflg

             
      
      #---------------------------------------------
       on key (interrupt)
      #---------------------------------------------
         exit input
       
      
      #---------------------------------------------   
       on key (F8)                              
      #---------------------------------------------   
        
        if ma_ctc69m16[arr_aux].srvcod is not null then  
            
            #--------------------------------------------------------
            # Abre a Tela Para a Digitacao da Descricao do Servico                          
            #--------------------------------------------------------
            
            call ctc69m01_inclui(2,ma_ctc69m16[arr_aux].srvcod)
            returning mr_ctc69m16.srvdestxt     
              
              
            if mr_ctc69m16.srvdestxt  <> lr_retorno.srvdestxt or
            	 (lr_retorno.srvdestxt  is null                 and 
            	  mr_ctc69m16.srvdestxt is not null )           then 
            	
            	#--------------------------------------------------------
            	# Atualiza a Descricao do Servico                          
            	#--------------------------------------------------------
            	            	
            	whenever error continue                                         
            	execute p_ctc69m16_007 using mr_ctc69m16.srvdestxt                       
            	                           , ma_ctc69m16[arr_aux].srvcod 
            	whenever error continue                                         
            	                                                                
            	if sqlca.sqlcode <> 0 then                                      
            	    error 'ERRO(',sqlca.sqlcode,') na Alteracao da Descricao do Servico!'    
            	else                                                            
            		  error 'Descricao do Servico Alterado com Sucesso!'                        
            	end if                                                                     	
            end if  	
                        	                                      
        end if
        
                    
  end input
  
 close window w_ctc69m16
 
 if lr_retorno.flag = 1 then
    call ctc69m16()
 end if
 
 
end function


#---------------------------------------------------------
 function ctc69m16_func(lr_param)
#---------------------------------------------------------

 define lr_param   record
    funmat      like isskfunc.funmat,
    empcod      like isskfunc.empcod,
    usrtipcod   like isskfunc.usrtip
 end record

 define lr_retorno            record
    funnom            like isskfunc.funnom
 end record

if m_prepare is null or
  m_prepare <> true then
  call ctc69m16_prepare()
end if
 
 initialize lr_retorno.*    to null

   if lr_param.empcod is null or 
      lr_param.empcod = " " then
      
      let lr_param.empcod = 1 
   
   end if 
 
  
   #--------------------------------------------------------
   # Recupera os Dados da Matricula                         
   #--------------------------------------------------------
   
   open c_ctc69m16_008 using lr_param.empcod , 
                             lr_param.funmat ,                       
                             lr_param.usrtipcod
   whenever error continue                            
   fetch c_ctc69m16_008 into lr_retorno.funnom
   whenever error stop
 
 return lr_retorno.funnom

 end function
 
#---------------------------------------------------------     
 function ctc69m16_valida_nome(lr_param)                            
#---------------------------------------------------------   
 
define lr_param record 
    srvnom char(60)
end record

define lr_retorno record  
    cont integer
end record                     
     
     
     open c_ctc69m16_004 using lr_param.srvnom          
     whenever error continue                                                
     fetch c_ctc69m16_004 into lr_retorno.cont                           
     whenever error stop                                                 
                                                                         
     if lr_retorno.cont > 0 then                                         
     	error "Nome do Servico ja Cadastrado!"                             
     	return false                                          
     end if       
     
     return true
     
end function  

#---------------------------------------------------------                                                                                            
 function ctc69m16_dados_alteracao(lr_param)                                             
#---------------------------------------------------------                                       

define lr_param record
	srvcod integer
end record
                                                                                                    
                                                                                      
   initialize mr_ctc69m16.* to null                                                    
                                                                                      
                                                               
   open c_ctc69m16_005 using lr_param.srvcod                                                   
      
   whenever error continue                                                 
   fetch c_ctc69m16_005 into  mr_ctc69m16.empcod                                       
                             ,mr_ctc69m16.usrmatnum                                       
                             ,mr_ctc69m16.regatldat                                       
                             ,mr_ctc69m16.usrtipcod
                             ,mr_ctc69m16.srvdestxt                                                
                                                                                      
   whenever error stop  
                                                                                                  
   call ctc69m16_func(mr_ctc69m16.usrmatnum, mr_ctc69m16.empcod, mr_ctc69m16.usrtipcod)               
   returning mr_ctc69m16.funnom                                                  
                                                                                 
   display by name  mr_ctc69m16.regatldat                                           
                   ,mr_ctc69m16.funnom                                           
                                                                                      
end function  

#--------------------------------------------------------- 
 function ctc69m16_inativacao(lr_param)                          
#--------------------------------------------------------- 

define lr_param     record                  
   srvcod  integer                                           
end record                                     
                                               
define lr_retorno  record                      
   cont1    integer ,      
   cont2    integer ,
   confirma char(01), 
   msg1     char(40),
   msg2     char(40), 
   msg3     char(40), 
   msg4     char(40)                                       
end record

initialize lr_retorno.* to null
                                               
        open c_ctc69m16_009 using lr_param.srvcod                                                                       
        whenever error continue                                                                                                  
        fetch c_ctc69m16_009 into  lr_retorno.cont1                                                                               
        whenever error stop                                                                                                      
                                                                                                                                 
                                                                                                       
        open c_ctc69m16_010 using lr_param.srvcod                                                                       
        whenever error continue                                                                                              
        fetch c_ctc69m16_010 into  lr_retorno.cont2                                                                           
        whenever error stop                                                                                                  
                                                                                                                             
        if lr_retorno.cont1 > 0 or
        	 lr_retorno.cont2 > 0 then
       
           let lr_retorno.msg1 = "SERA INATIVADO " 
           let lr_retorno.msg2 = lr_retorno.cont1 using '<<<<' ," ASSOCIACOES COM ESSE SERVICO "
           let lr_retorno.msg3 = lr_retorno.cont2 using '<<<<' ," ESPECIALIDADES COM ESSE SERVICO " 
           let lr_retorno.msg4 = "CONFIRMA? " 
           
           let lr_retorno.confirma = cts08g01("C","S",
                                              lr_retorno.msg1,             
                                              lr_retorno.msg2,       
                                              lr_retorno.msg3,       
                                              lr_retorno.msg4)       
       
           if lr_retorno.confirma = "S" then                   
           	  call ctc69m16_atualiza_inativacao(lr_param.srvcod )          	    
           else 
           	  return false
           end if	                                             
        
       end if
       
       return true
        
end function 

#---------------------------------------------------------                                                                                                     
 function ctc69m16_atualiza_inativacao(lr_param)                                                                                                                               
#---------------------------------------------------------                               
                                                                                         
define lr_param     record                                                               
   srvcod     integer                                                               
end record                                                                               
                                                                                         
 begin work                                                                              
                                                                                         
                                                                                         
 whenever error continue                                                                 
 execute p_ctc69m16_011 using  lr_param.srvcod                                      
 whenever error stop                                                                     
                                                                                         
 if sqlca.sqlcode <>  0  then                                                            
    error " Erro (",sqlca.sqlcode,") na Alteracao da Situacao dos Servicos!"             
    rollback work                                                                        
    return                                                                               
 end if                                                                                  
                                                                                         
 whenever error continue                                                                 
 execute p_ctc69m16_012 using  lr_param.srvcod                                      
 whenever error stop                                                                     
                                                                                         
 if sqlca.sqlcode <>  0  then                                                            
    error " Erro (",sqlca.sqlcode,") na Alteracao da Situacao das Especialidades!"       
    rollback work                                                                        
    return                                                                               
 end if                                                                                  
                                                                                         
 error "Dados Inativados com Sucesso!"                                                   
 commit work                                                                             
                                                                                         
end function                                                                             
                                                                                         